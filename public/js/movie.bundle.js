!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=7)}({7:function(e,t){const n=e=>`\n      <small>${e}</small>\n      `,r=(e,t="")=>`\n      <div class='${t}'>There are no ${e} available</div>\n    `,i=document.querySelector(".hero"),o=document.querySelector(".release_date"),a=document.querySelector(".movie_title"),s=document.querySelector(".movie_poster"),c=document.querySelector(".sypnosis"),l=document.querySelector(".genres"),d=document.querySelector(".reviews_container"),u=document.querySelector(".trailers_container"),m=document.querySelector(".casts");(()=>{const e=window.location.pathname.trim().split("/")[3].trim();fetch(`/api/movie/${e}`).then(e=>e.json()).then(e=>{const{release_date:t,original_title:p,title:v,poster:f,backdrop:y,overview:h,genres:b,cast:g,reviews:w,trailers:S}=e;let $=new Date(t).toDateString().split(" ").splice(1);$=`${$[0]} ${$[1]}, ${$[2]}`,o.textContent="Released: "+$,a.textContent=p||v;const j=b.map((e,t)=>{if(t+1===b.length)return n(e.name);return n(`${e.name} <span class='glyphicon glyphicon-arrow-right' aria-hidden='true'></span> `)}).join("").trim();l.innerHTML="Genres: "+j,i.setAttribute("style",`background-image: url(${y})`),s.setAttribute("src",f),c.textContent=h,d.innerHTML=w.length?w.map(e=>(e=>{const{author:t,content:n}=e||{};return`\n            <div class="col-md-12 review">\n              <div class="row">\n                  <h5>${t}</h5>\n                  <p>${n}</p>\n              </div>\n            </div>\n        `})(e)).join("").trim():r("reviews"),u.innerHTML=S.length?S.map(e=>(e=>{const{key:t}=e;return`\n          <div class="col-md-4 trailer">\n              <div class="embed-responsive embed-responsive-16by9">\n                  <iframe \n                    class="embed-responsive-item"\n                    id="ytplayer"\n                    type="text/html"\n                    src="https://www.youtube.com/embed/${t}"></iframe>\n              </div>\n        </div>\n      `})(e)).join("").trim():r("trailer");const _=document.createElement("div");_.innerHTML=g.length?g.map(e=>(e=>{const{character:t,name:n,profile:r}=e||{};return`\n        <div class="media cast">\n            <div class="media-left media-middle">\n                <div>\n                    <a href="javascript:void()">\n                        <img class="media-object" src="${r}" width="64">\n                    </a>\n                </div>\n            </div>\n            <div class="media-body">\n                <h5 class="media-heading">${n}</h5>\n                <p>as ${t}</p>\n            </div>\n        </div>\n        `})(e)).join("").trim():r("cast"),m.appendChild(_)})})()}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,